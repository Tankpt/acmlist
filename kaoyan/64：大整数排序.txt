#include <stdio.h>
#include <math.h>
#include <string.h>
#include <algorithm>
#include <stdlib.h>
using namespace std;
struct bigint{
	int dig[251];
	int size;
}num[100];
void init(char *s,bigint *t)
{
	int len,i,j,sum;;
	len=strlen(s);
	for(i=0;i<251;i++)
		t->dig[i]=0;
	t->size=0;
	sum=0;j=0;
	for(i=len-1;i>=0;i--)//整数低位向高位
	{
		sum=sum+pow(10.0,j)*(s[i]-'0');
		if(j==3)
		{
			t->dig[t->size]=sum;
			t->size++;
			sum=0;j=-1;
		}
		j++;
	}
	if(sum!=0)
	{
		t->dig[t->size]=sum;t->size++;
	}
};
bool cmp(bigint b,bigint a){
	int i;
	if(a.size>b.size) return true;
	else if(a.size<b.size) return false;
	else//位数一样
	{
		for(i=a.size-1;i>=0;i--)
		{
			if(a.dig[i]>b.dig[i]) return true;
			else if(a.dig[i]<b.dig[i]) return false;
			else ;
		}
	}
	return true;
};
int main() 
{
	int n,i,j;
	while(scanf("%d",&n)!=EOF )
	{
		char s[1002];
		for(i=0;i<n;i++)
		{
			scanf("%s",&s);
			init(s,&num[i]);
		}	
		sort(num,num+n,cmp);;
		for(i=0;i<n;i++)
		{
			printf("%d",num[i].dig[num[i].size-1]);
			for(j=num[i].size-2;j>=0;j--)
				printf("%04d",num[i].dig[j]);
			printf("\n");
		}	
	}
	return 0;

}