样例输入：
9
A 2 B 12 I 25
B 3 C 10 H 40 I 8
C 2 D 18 G 55
D 1 E 44
E 2 F 60 G 38
F 0
G 1 H 35
H 1 I 35
3
A 2 B 10 C 40
B 1 C 20
0
样例输出：
216
30

#include <stdio.h>
#include <algorithm>
using namespace std;
int tree[27];
struct Edge{
	int a;
	int b;
	int cost;
}edge[76];
bool cmp(Edge a,Edge b)
{
	return a.cost<b.cost;
};
int find(int x)
{
	int t,ret,tmp;
	tmp=x;
	while(tree[x]>0)
		x=tree[x];
	ret=x;x=tmp;
	while(tree[x]>0)
	{
		t=tree[x];
		tree[x]=ret;
		x=t;
	}
	return ret;
};
int main() 
{
	int n,i,num,j,k;
	int x,y,sum;
	char s1,s2;
	while( scanf("%d",&n)!=EOF && n!=0 )
	{
		for(i=1;i<=75;i++)
			tree[i]=-1;
		j=0;
		while(n>1)
		{
			getchar();
			scanf("%c%d",&s1,&num);
			for(i=0;i<num;i++)
			{
				getchar();
				scanf("%c%d",&s2,&k);
				edge[j].a=s1-'A'+1;edge[j].b=s2-'A'+1;
				edge[j].cost=k;
				j++;
			}
			n--;
		}
		sort(edge,edge+j,cmp);sum=0;
		for(i=0;i<j;i++)
		{
			x=edge[i].a;y=edge[i].b;
			x=find(x);y=find(y);
			if(x!=y)
			{
				tree[x]=y;
				sum=sum+edge[i].cost;
			}
		}
		printf("%d\n",sum);
	}
	return 0;
}